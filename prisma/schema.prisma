generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  first_name     String
  last_name      String
  contact        String
  customer_image String?
  role_id        Int
  refresh_token  String?
  password       String
  role           roles           @relation(fields: [role_id], references: [id])
  orders         orders[]
  cart           cart_details[]
  order_details  order_details[]

  @@index([role_id], map: "users_role_id_fkey")
}

model vendors {
  id              Int        @id @default(autoincrement())
  email           String     @unique
  vendor_name     String
  vendor_location String
  contact         String
  role_id         Int
  refresh_token   String?
  vendor_image    String?
  password        String
  products        products[]
  role            roles      @relation(fields: [role_id], references: [id])

  @@index([role_id], map: "vendors_role_id_fkey")
}

model products {
  id                  Int             @id @default(autoincrement())
  product_name        String
  product_price       Int
  product_image       String
  product_description String
  vendor_id           Int
  category            categories     @relation(fields: [product_category], references: [id], onDelete: Cascade)
  product_category    Int
  vendor              vendors         @relation(fields: [vendor_id], references: [id], onDelete: Cascade)
  order_details       order_details[]
  cart                cart_details[]

  @@index([vendor_id], map: "products_vendor_id_fkey")
}

model roles {
  id        Int       @id @default(autoincrement())
  role_name String
  users     users[]
  vendors   vendors[]
}

model orders {
  id               Int             @id @default(autoincrement())
  customer_id      Int
  total_amount     Int             @default(0)
  orderDate        DateTime        @default(now())
  shipping_address String
  contact_no       String
  user             users           @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  order_details    order_details[]
}

model order_details {
  id           Int      @id @default(autoincrement())
  order_id     Int
  product_id   Int
  quantity     Int
  total_amount Int     @default(0)
  customer     users    @relation(fields: [customer_id], references: [id])
  customer_id  Int
  order        orders   @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product      products @relation(fields: [product_id], references: [id])
}

model categories {
  id            Int        @id @default(autoincrement())
  category_name String
  category_image String?
  products      products[]
}

model cart_details {
  id           Int      @id @default(autoincrement())
  user         users    @relation(fields: [user_id], references: [id])
  user_id      Int
  quantity     Int      @default(1)
  product      products @relation(fields: [product_id], references: [id])
  product_id   Int
  total_amount Int
}
